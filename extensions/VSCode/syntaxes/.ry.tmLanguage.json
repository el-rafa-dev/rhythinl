{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Rhythin",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#keywordsAndTypes"
        },
        {
            "include": "#identifiers"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.rhythin",
                    "match": "^#.*$" 
                },
                {
                    "name":"comment.line.number-sign.rhythin",
                    "match": "^;.*$"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.rhythin",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.rhythin",
                    "match": "\\\\."
                },
                {
                    "name": "variable.interpolation.rythin",
                    "begin": "\\$\\[",
                    "end": "\\]",
                    "patterns": [
                        {
                            "include": "#expression"
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "match": "(\\b\\d+(?:\\.\\d+)?)([fF])?\\b",
                    "captures": {
                        "1": { "name": "constant.numeric.rhythin" },
                        "2": { "name": "keyword.other.suffix.float.rhythin" }
                    }
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.rhythin",
                    "match": ":=|\\+=|\\-="
                },
                {
                    "name": "keyword.operator.arithmetic.rhythin",
                    "match": "\\+|-|\\*|/|%"
                },
                {
                    "name": "keyword.operator.logical.rhythin",
                    "match": "&&|\\|\\||!"
                },
                {
                    "name": "keyword.operator.comparison.rhythin",
                    "match": "==|!=|<=|>=|<|>"
                },
                {
                    "name": "keyword.operator.arrow.rhythin",
                    "match": "->|>>|>"
                },
                {
                    "name": "keyword.operator.other.rhythin",
                    "match": ":"
                }
            ]
        },
        "keywordsAndTypes": {
            "patterns": [
                {
                    "name": "keyword.control.rhythin",
                    "match": "\\b(try|catch|if|but|loop|return|def|makedef|using|from|get|as|in|local|global|and|or|lenght|switch|case|default|stop|continue|jmpcase|true|false)\\b"
                },
                {
                    "name": "storage.type.rhythin",
                    "match": "\\b(func|charseq|int32|int64|float32|float64|bool|byte|obj)\\b"
                }
            ]
        },
        "identifiers": {
            "name": "variable.other.rhythin",
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        "expression": {
            "patterns": [
                { "include": "#keywordsAndTypes" },
                { "include": "#operators" },
                { "include": "#numbers" },
                { "include": "#identifiers" }
            ]
        }
    },
    "scopeName": "source.rhythin"
}